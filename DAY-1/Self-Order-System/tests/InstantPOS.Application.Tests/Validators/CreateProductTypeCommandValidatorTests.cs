using System;
using InstantPOS.Application.CQRS.ProductType.Command;
using InstantPOS.Application.Validator;
using Xunit;

namespace InstantPOS.Application.Tests.Validators
{
    public class CreateProductTypeCommandValidatorTests
    {
        private readonly CreateProductTypeCommand _model;
        private readonly CreateProductTypeCommandValidator _validator;

        public CreateProductTypeCommandValidatorTests()
        {
            _model = new CreateProductTypeCommand
            {
                ProductTypeKey = "TypeId1",
                ProductTypeName = "TypeName1"
            };

            _validator = new CreateProductTypeCommandValidator();
        }

        [Fact]
        public void ShouldSuccess_When_Model_Is_Valid()
        {
            var result = _validator.Validate(_model);
            Assert.True(result.IsValid);
        }

        [Theory]
        [InlineData(null)]
        [InlineData("")]
        public void ShouldFail_When_ProductTypeKey_Is_Empty(string productTypeKey)
        {
            _model.ProductTypeKey = productTypeKey;
            var result = _validator.Validate(_model);
            Assert.False(result.IsValid);
        }

        [Theory]
        [InlineData
        public void ShouldFail_When_ProductTypeName_Is_Greater_Than_250Chars(string productTypeName)
        {
            _model.ProductTypeName = productTypeName;
            var result = _validator.Validate(_model);
            Assert.False(result.IsValid);
        }
    }
}
